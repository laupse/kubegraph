name: Continuous integration

on:
  push:
    branches: 
    - main
  pull_request:
    branches:
    - main 

env:
  IMAGE_NAME: kubegraph
  K6_VERSION: "v0.39.0"

jobs:
  integration-test: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.3.0
      with: 
        cluster_name: kind
        config: .github/kind-conf.yaml

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with: 
        context: .
        file: Dockerfile
        push: false
        tags: ${{ env.IMAGE_NAME }}:test

    - name: Load and apply manifest
      run: |
        kind load docker-image ${{ env.IMAGE_NAME }}:test --name kind
        kubectl apply -f .github/kube-ci.yaml
        sleep 5

    - name: Run integration test 
      run: |
        wget -q https://github.com/grafana/k6/releases/download/${{ env.K6_VERSION }}/k6-${{ env.K6_VERSION }}-linux-amd64.tar.gz
        tar -xzf k6-${{ env.K6_VERSION }}-linux-amd64.tar.gz
        chmod +x k6-${{ env.K6_VERSION }}-linux-amd64/k6
        k6-${{ env.K6_VERSION }}-linux-amd64/k6 run script.js
      working-directory: k6

  build-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs: [integration-test]

    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    
    steps:
    - uses: actions/checkout@v3

    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Build & Push Docker image
      uses: docker/build-push-action@v2
      with: 
        context: .
        file: Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest,
          ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:main

